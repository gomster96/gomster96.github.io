{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Gomster","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"LCA알고리즘이란? LCA 알고리즘은 Lowest Common Ancestor의 약자로 영어 해석 그대로 어떠한 트리에서 최소 공통 조상을 찾는 알고리즘이다. 위의 사진에서 두 정점 u,v 의 가장 가까운 조상을 LCA(u,v)라고 한다. 예를들어 12와 5의 공통 조상 LCA(12,5)는 1이고, 6과 9의 공통 조상 LCA(6,9)는 2이다. LCA …","fields":{"slug":"/Algorithm/LCA/"},"frontmatter":{"date":"February 16, 2022","title":"최소 공통 조상(Lowest Common Ancestor, LCA)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"인덱스 트리란 인덱스 트리는 포화 이진트리(모든 노드의 자식이 2인 이진트리)를 응용한 자료구조이다. 일반적으로 해당 두가지 연산을 M번 수행해야할 때 주로 사용한다. 구간 left, right(left <= right>) 이 주어졌을 때 Aleft + Aleft+1 + … + Aright-1+ Aright 의 합을 구해라 i번째 수 Ai를 V로 바꾸어라…","fields":{"slug":"/Algorithm/IndexTree/"},"frontmatter":{"date":"February 10, 2022","title":"인덱스 트리 (Index Tree)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/16398 풀이전략 각 행성간의 플로우 관리비용의 최소값을 구하면 된다.\n최소신장트리를 구하면 되는 문제이므로 크루스칼 알고리즘을 사용하여 문제를 해결한다. 코드 회고 크루스칼 알고리즘의 정석문제였다. 알고리즘을 잊지 않도록 자주 복습하도록 하자.","fields":{"slug":"/PS/MST/16398/"},"frontmatter":{"date":"February 07, 2022","title":"백준 16398번 JAVA : 행성 연결","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1647 풀이전략 마을을 분리한 뒤 분리한 마을들 간의 최소신장트리를 구하는 문제이다. 나는 문제를 풀 때 먼저 전체 마을을 이으는 최소신장트리를 구하고, 여기서 가장 긴 도로의 길이를 빼줌으로써 마을을 2개로 분리할 것이다. 크루스칼 알고리즘을 사용한다. 코드 회고 크루스…","fields":{"slug":"/PS/MST/1647/"},"frontmatter":{"date":"February 07, 2022","title":"백준 1647번 JAVA : 도시 분할 계획","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/17472 풀이전략 DFS를 사용하여 섬의 연결정보를 얻는다. 각 섬들을 연결하는 모든 다리를 구한다. (N과 M은 10이하이므로 시간은 충분하다.) 각 다리들을 priorityQueue에 저장하여 최소길이부터 뽑으면서 섬들을 연결해준다. 코드 회고 만약에 섬의 개수가 매우…","fields":{"slug":"/PS/DFS/17472/"},"frontmatter":{"date":"February 07, 2022","title":"백준 17472번 JAVA : 다리만들기2","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/16118 풀이전략 다익스트라 알고리즘을 사용한다. 여우와 늑대의 한 지점으로부터 다른 모든 지점으로의 거리를 구해야하기 때문 거리 즉 가중치가 항상 양의 정수이기 때문에 다익스트라로 해결할 수 있다. 늑대는 속도가 빨라지고 느려진다. 나누기 2 를 할경우 이때 소수점을 사…","fields":{"slug":"/PS/다익스트라/16118/"},"frontmatter":{"date":"February 07, 2022","title":"백준 16118번 JAVA : 달빛 여우","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2307 풀이전략 다익스트라 알고리즘을 사용한다. 거리 즉 가중치가 항상 양의 정수이기 때문에 다익스트라로 최단거리를 구해야 한다.. 모든 간선을 막을 경우 시간이 초과된다. 따라서 범죄용의자의 최단거리를 이루는 path에 해당하는 간선들만 막으면서 최단거리를 구해 지연시간…","fields":{"slug":"/PS/다익스트라/2307/"},"frontmatter":{"date":"February 07, 2022","title":"백준 2307번 JAVA : 도로검문","category":"PS","draft":false}}},{"node":{"excerpt":"TIL 코테문제를 해결할 때 Long 보다 Integer가 계산속도가 빠르다 long, int 타입이 필요할때를 확실히 구분하자 Long.compareTo 함수는 느리다.","fields":{"slug":"/TIL/20220206/"},"frontmatter":{"date":"February 06, 2022","title":"2022년 2월 6일 TIL","category":"TIL","draft":false}}},{"node":{"excerpt":"이전부터 Spring Boot로 프로젝트를 해보고 싶었기 때문에, 이번에 HereTogether 프로젝트를 진행하면서 본격적으로 Spring Boot에 대해 공부 할 것이다. 이번 포스팅 즉 Spring Boot로 Project 생성하기가 이 프로젝트의 첫 걸음이 될 것 같다. Spring Initializer로 프로젝트 생성하기 Spring Boot로 …","fields":{"slug":"/Spring/SpringBoot_Create_Project/"},"frontmatter":{"date":"February 02, 2022","title":"Spring Boot로 Project 생성하기 with MySQL","category":"Spring","draft":false}}},{"node":{"excerpt":"플로이드-워셜 알고리즘이란? 플로이드 워셜 알고리즘은 V개의 정점과 E개의 간선을 가진 가중 그래프 G에서 모든 정점사이의 최단경로를 구하는 알고리즘이다. 어떤 두 정점 사이의 최단경로는 특정한 경유지(K)를 거치거나 거치지 않는 경로 중 하나이다. (정점 A와 B의 최단경로는 A-K-B 또는 A- B 이다) 경유지 K를 거친다면 최단 경로를 이루는 부분…","fields":{"slug":"/Algorithm/Floyd-Warshall/"},"frontmatter":{"date":"January 27, 2022","title":"플로이드-워셜 알고리즘 (Floyd-Warshall)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"벨만 포드 알고리즘이란? 벨만포드 알고리즘 이란 V개의 정점과 E개의 간선을 가진 그래프 G에서 특정 출발 정점(S)에서 부터 다른 를 구하는 알고리즘이다. V개의 정점과 E개의 간선을 가진 가중 그래프에서 어떤 정점 A에서 어떤 정점 B까지의 최단거리는 최대 V - 1 개의 간선을 사용한다. 최단거리를 구하기 위해 V - 1 번 E개의 모든 간선을 확인…","fields":{"slug":"/Algorithm/Bellman-Ford-Moore/"},"frontmatter":{"date":"January 27, 2022","title":"벨만포드 알고리즘 (Bellman-Ford-Moore)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"다익스트라 알고리즘이란? 다익스트라 알고리즘은 V개의 정점과  E개의 간선을 가진 그래프 G에서 특정 출발 정점(S)에서 부터 다른 를 구하는 알고리즘이다. 다익스트라 알고리즘은 음이 아닌 가중 그래프(간선의 weight가 있는 그래프)에서의 단일 쌍, 단일 출발, 단일 도착 최단 경로문제일때 푼다. 다익스트라 알고리즘은 BFS를 기본으로 한다. 음수 가…","fields":{"slug":"/Algorithm/Dijkstra/"},"frontmatter":{"date":"January 27, 2022","title":"다익스트라 알고리즘 (Dijkstra Algorithm)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"크루스칼 알고리즘이란? 크루스칼 알고리즘은 그래프에서 최소 비용 신장 부분 트리를 구하는 알고리즘이다. 크루스칼알고리즘은 Union&Find와 그리디 알고리즘을 같이 사용하여 구현한다. 신장 트리 신장 트리란 각 노드가 모두 연결이 되어있고, 싸이클 즉 순환이 없는 트리를 말한다. 크루스칼 알고리즘 구현 주어진 그래프의 모든 간선에 대해서, 간선의 가중치…","fields":{"slug":"/Algorithm/Kruskal/"},"frontmatter":{"date":"January 24, 2022","title":"크루스칼 알고리즘 (Kruskal Algorithm)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"Union-Find 흔히 Union-Find로 알고있는 서로소 집합은 교집합이 공집합인 집합 들의 정보를 확인(Find)하고 조작(Union)할 수 있는 자료구조이다. Union 연산 Union(a, b) 서로 다른 두 원소 a, b가 있을 때 각 원소가 속한 집합을 하나로 합치는 연산이다. 따라서 원소 a는 집합 A에 속하고, 원소 b는 집합 B에 속할…","fields":{"slug":"/Algorithm/UnionFind/"},"frontmatter":{"date":"January 24, 2022","title":"서로소 집합 (Disjoint Set, Union-Find)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"오늘은 javaTpoint 에 있는 CRUD예제를 짜보면서 Spring MVC에서 각 요소들이 어떤 역할들을 어떻게 하는지 정리해볼 것이다. 사전작업 - DB table 생성 이번에 주어진 예제를 위한 DB table 생성을 위한 mysql 코드는 다음과 같다. id는 Null이 되면 안되고, PrimaryKey이며, 그냥 add할 때 편하게 하기위해 A…","fields":{"slug":"/Spring/CRUD/"},"frontmatter":{"date":"January 21, 2022","title":"Spring 게시판 CRUD 예제","category":"Spring","draft":false}}},{"node":{"excerpt":"Spring Controller 리턴 타입 Spring에서 지원해주는 Controller에는 다양한 리턴 타입을 지원하며 각각의 역할이 다르다. 이번 포스팅에서는 스프링에서 지원하는 리턴타입을 알아보도로 하겠다. String Spring + View Template를 사용할 때 흔히 사용하는 타입이다. String에 View네임을 지정하면 지정한 뷰로 데…","fields":{"slug":"/Spring/SpringControllerReturnType/"},"frontmatter":{"date":"January 19, 2022","title":"Spring Controller의 return 타입","category":"Spring","draft":false}}},{"node":{"excerpt":"IoC(Inversion of Control) IoC는 Inversion of Control의 약자로서 제어권의 역전이라는 뜻이다.\n 된 것을 의미한다. 따라서 객체의 생성과 소멸, 객체간의 의존 관계를 개발자가 아닌 Spring 프레임워크가 통제하고 관리하게 된 것이다. 이렇게 IoC개념을 구현하기 위해서 DI와 DL이 나왔다. 종속성(Dependenc…","fields":{"slug":"/Spring/IOC,DI,DL/"},"frontmatter":{"date":"January 19, 2022","title":"IoC, DI, DL","category":"Spring","draft":false}}},{"node":{"excerpt":"POJO란? POJO는 Plain Old Java Object의 약자로 객체 지향적인 원리에 충실하면서 환경과 기술에 종속되지 않고 필요에 따라 재활용 될 수 있는 방식으로 설계된 오브젝트를 말한다. 말이 어려운데 그냥 아래의 조건을 따르는 Java 언어의 개념에 충실하게 여러 논리를 구현하는 방법이다. POJO의 조건 특정 규약에 종속되지않는다. 자바 …","fields":{"slug":"/Spring/POJO/"},"frontmatter":{"date":"January 19, 2022","title":"POJO (Plain Old Java Object)","category":"Spring","draft":false}}},{"node":{"excerpt":"Spring Framework IOC(Invertion of Control : 제어역행) DI(Dependency Injection : 의존성 주입 ) AOP(Aspect-Oriented Programming : 관점 지향 프로그래밍) 장점 정형화 되어 있기 때문에 일정 수준의 품질을 기대할 수 있다. 개발 후 유지보수 및 기능의 확장성에서도 품질을 보장…","fields":{"slug":"/Spring/SpringAndBoot/"},"frontmatter":{"date":"January 19, 2022","title":"Spring Framework vs Spring Boot","category":"Spring","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1072 풀이전략 게임의 승률이 향상 되기까지의 총 문제를 해결한 횟수를 구해야한다. 그냥 for문을 돌리면 X에 1,000,000,000 을 해버리면 시간초과가 나온다. 이분탐색을 활용한다. 적어도 X값만큼 반복하면 반드시 승률이 바뀐다. 게임을 해도 승률이 변하지 않으면…","fields":{"slug":"/PS/이분탐색/1072/"},"frontmatter":{"date":"January 18, 2022","title":"백준 1072번 JAVA : 게임","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2143 풀이전략 두 배열을 합하여 구할 수 있는 쌍의 개수를 구하는 문제이다. 각 배열들의 합으로 다시 부분집합을 만들어 이를 투포인터 알고리즘을 사용하여 풀면 된다. 각 배열의 합은 순차적으로 더하는 것만 고려한다. 즉 연속된 부분배열을 사용해야한다. 1000 * 100…","fields":{"slug":"/PS/투포인터/2143/"},"frontmatter":{"date":"January 18, 2022","title":"백준 2143번 JAVA : 두 배열의 합","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2096 풀이전략 내려갈 수 있는 최대값과, 최소 값을 구하는 문제이다. N은 100000개이므로 시간초과에 주의해야한다. maxSum, minSum을 즉 누적합을 만들며 만들며 for문을 진행하면 O(N)으로 만들 수 있다. 각 위치에서 내려 갈 수 있는 최소수만을 더해오…","fields":{"slug":"/PS/투포인터/2096/"},"frontmatter":{"date":"January 18, 2022","title":"백준 2096번 JAVA : 내려가기","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1806 풀이전략 연속된 수들의 부분합 중 그 합이 S이상이 되는 것들 중, 가장 짦은 것의 길이를 구하는 문제이다. 투 포인터 알고리즘을 사용하여 O(n)으로 문제를 해결 할 수 있다. 합을 만드는 것이 불가능하다면 0을 출력해야한다. 코드 회고 투포인터 알고리즘을 사용해…","fields":{"slug":"/PS/투포인터/1806/"},"frontmatter":{"date":"January 18, 2022","title":"백준 1806번 JAVA : 부분 합","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2748 풀이전략 그냥 피보나치 수열을 구하는 문제이다. 워낙 비슷한 문제가 많으므로 쉽게 풀 수 있다. 단 메모이제이션을 이용하여 훨씬 빠른 시간복잡도로 문제를 해결할 수 있다. 코드 회고","fields":{"slug":"/PS/분할정복/2748/"},"frontmatter":{"date":"January 18, 2022","title":"백준 2748번 JAVA : 피보나치 수2","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2805 풀이전략 선정할 수 있는 높이의 최대값 즉 가능한한 나무를 많이 살리는 방법을 찾는 것이다. 정렬을 한뒤 height를 낮춰가며 구할 수 있는 나무의 길이의 합을 구한다. 이렇게하면 정렬할때 사용되는 O(nlogn) 로 풀수 있다. 코드 회고 문제를 풀다가 헷갈려서…","fields":{"slug":"/PS/정렬/2805/"},"frontmatter":{"date":"January 18, 2022","title":"백준 2805번 JAVA : 나무자르기","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2003 풀이전략 수열의 부분합이 M이 되는 경우의 수를 구해야한다. 투 포인터 알고리즘을 사용하여, 왼쪽, 오른쪽 포인터를 만들어 값이 작으면 오른쪽을++, 값이 크면 왼쪽을 ++ 하여 수열의 합을 구한다. 코드 회고 전위연산자, 후위연산자를 통해 코드를 더 짧게 만들었다…","fields":{"slug":"/PS/투포인터/2003/"},"frontmatter":{"date":"January 18, 2022","title":"백준 2003번 JAVA : 수들의 합","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1713 풀이전략 문제의 기능은 거의 LRU를 구현하는 것과 같다. 가장 많이, 최근에 추천받은 학생만 남긴 후 출력시 오름차순으로 출력해야한다. 틀의 개수가 초과되면 추천횟수가 가장 많은 순으로, 게시된지 가장 최근인 순으로 정렬을 해야한다. 마지막에 출력시 오름차순으로 …","fields":{"slug":"/PS/정렬/1713/"},"frontmatter":{"date":"January 18, 2022","title":"백준 1713번 JAVA : 후보 추천하기","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/3055 풀이전략 고슴도치가 물을 피해 비버 굴로 가는 문제이다. 최소시간 즉 최단거리를 구하는 문제이므로 BFS로 풀었다. 고슴도치와 물은 상하좌우를 움직일 수 있다. -> dy, dx 배열을 만들어서 움직임을 구현한다. 고슴도치는 물이 찰 예정인 칸으로 이동할 수 없다 …","fields":{"slug":"/PS/BFS/3055/"},"frontmatter":{"date":"January 18, 2022","title":"백준 3055번 JAVA : 탈출","category":"PS","draft":false}}},{"node":{"excerpt":"Model, View, Controller 뒤에 내용을 하기전 Model, View, Controller가 각각 무슨 역할을 하는지 알면 더 잘 이해할 수 있으므로 여기서 말하도록 하겠다. Model이란 어플리케이션이 무엇을 할 것인지 정의한다. 내부 비즈니스 로직을 처리하기 위한 역할을 한다. 즉 DB와 연동하여 사용자가 입력한 데이터나 출력할 데이터를…","fields":{"slug":"/Spring/JSPModels/"},"frontmatter":{"date":"January 18, 2022","title":"JSP model1, JSP model2, MVC","category":"Spring","draft":false}}},{"node":{"excerpt":"Spring을 처음 공부해오면서, JSP를 공부하면서 자주 나오는 이름이 있었다. 그것은 바로 Java Bean 자바빈(자바빈즈)이다. 대체 빈이 무엇인지, 무슨 역할을 하는지 이번 포스팅에서 정리해보도록 하겠다. Java Bean이란 자바빈(Java Bean)는 자바로 작성된 소프트웨어 컴포넌트를 일컫는 말로 데이터 표현을 목적으로 하는 자바 클래스이며…","fields":{"slug":"/Spring/JavaBean/"},"frontmatter":{"date":"January 18, 2022","title":"Java Bean","category":"Spring","draft":false}}},{"node":{"excerpt":"DAO (Data Accesss Object) DAO는 Database에 접근하기위한 객체이며 Database 접근을 하기 위한 로직과 비즈니스 로직을 분리하기 위해 사용한다. Interface를 만들면 DAO는 이 Interface를 구현한 객체를 사용할 수 있도록 반환해준다. DAO는 DB연결를 해주는 Connection까지 설정 해줄 때가 많다. 단…","fields":{"slug":"/Spring/DAO,DTO,VO/"},"frontmatter":{"date":"January 18, 2022","title":"DAO, DTO, VO 란?","category":"Spring","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1759 풀이전략 입력받은 문자열을 사용하여 암호를 만드는 때 이때 오름차순, 모음, 자음 개수를 맞춰 주어야한다. 암호는 오름차순이다. 오름 차순이기 때문에 먼저 정렬을 해주어 사용하면, 방문 여부를 체크하는 것보단 index로 해줄 수 있다. 모음의 개수는 1개이상, 자…","fields":{"slug":"/PS/정렬/1759/"},"frontmatter":{"date":"January 17, 2022","title":"백준 1759번 JAVA : 암호만들기","category":"PS","draft":false}}},{"node":{"excerpt":"jQuery란? jQuery는 엘리먼트를 선택하는 강력한 방법과 선택된 엘리먼트들을 효율적으로 제어할 수 있는 다양한 수단을 제공하는 자바스크립트 라이브러리다. 최근에는 jQuery를 쓰는 빈도가 많이 낮아졌지만 SamsungSDS의 어떤 포스팅에서는 그럼에도 불구하고 정적이고 가벼운 웹페이지를 신속하게 제작하는 용도로는 다른 라이브러리보다 적합하며, 아…","fields":{"slug":"/FE/5_jQuery/"},"frontmatter":{"date":"January 17, 2022","title":"jQuery","category":"FE","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/19598 풀이전략 모든 회의를 진행할 수 있는 최소 회의실의 개수를 구하는 문제이다. 즉 중복되는 회의가 생길 때마다 회의실의 개수를 추가해주어야한다. 기본적인 회의실 문제처럼 끝나는 시간을 기준으로 회의실을 정렬해준다. (Proiority Queue 사용) 정렬된 순서대…","fields":{"slug":"/PS/그리디/19598/post/"},"frontmatter":{"date":"January 15, 2022","title":"백준 19598번 JAVA : 최소 회의실 개수","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/21758 풀이전략 벌통이 위치할 수 있는 경우는 3가지이다. 코드 회고","fields":{"slug":"/PS/그리디/21758 - 수정필요/post/"},"frontmatter":{"date":"January 15, 2022","title":"백준 21758번 JAVA : 꿀따기","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/21314 풀이전략 민겸수라는 문제에 조건을 잘 파악해야한다. 문제에서 주어진 사진 M일떄 1, K일떄 5란 조건을 잘 파악해야한다. 큰값을 구할 때와 작은 값을 구할 때 K의 역할이 다르다. 큰 값을 구할 때 K는 5를 곱해줘야한다. 작은 값을 구할 때 K는 그냥 뒤에 5…","fields":{"slug":"/PS/그리디/21314/post/"},"frontmatter":{"date":"January 15, 2022","title":"백준 21314번 JAVA : 민겸 수","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/16953 풀이전략 정수를 A에서 B로 바꿀 때 가능한 연산은 2를 곱하거나, 1을 수의 가장 오른쪽에 추가하는 것이다. 이떄 필요한 연산의 최솟값을 구해야한다. A에서 B로 만드는 것은 너무 경우의 수가 많으므로, B에서 A로 가는 방법을 택했다. 가능한 연산의 우선순위를…","fields":{"slug":"/PS/그리디/16953/post/"},"frontmatter":{"date":"January 15, 2022","title":"백준 16953번 JAVA : A -> B","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1931 풀이전략 인풋으로 각 회의의 시작시간과 끝나는 시간이 정해진다. 이를 겹치지 않게 사용할 수 있는 회의의 최대 개수를 구해야한다. 회의가 끝나는 시간이 빠른 순으로 정렬을 하여 회의들을 정렬하여 사용한다. priority queue를 사용한다. Pair클래스를 만들…","fields":{"slug":"/PS/그리디/1931/post/"},"frontmatter":{"date":"January 15, 2022","title":"백준 1931번 JAVA : 회의실 배정","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/20115 풀이전략 임의의 서로다른 두 에너지 드링크 중 한쪽 에너지 드링크에서 다른 에너지 드링크로 부을 때 붓는 양의 절반을 버리며 합친다. 가장 큰 값을 기준시작으로 다른 값들을 반씩 버리며 합쳐준다. 오차는 10^-5 까지 허용하므로, 이를 잘 처리해주어야한다. 코드…","fields":{"slug":"/PS/그리디/20115/post/"},"frontmatter":{"date":"January 15, 2022","title":"백준 20115번 JAVA : 에너지드링크","category":"PS","draft":false}}},{"node":{"excerpt":"네트워킹 (Networking) 네트워킹이란 두 대 이상의 컴퓨터를 케이블로 연결하여 네트워크(network)를 구성하는 것을 말한다. 자바에서 제공하는 java.net패키지를 사용하면 네트워크 어플리케이션의 데이터 통신 부분을 쉽게 작성할 수 있다. 클라이언트(client)와 서버(server) 클라이언트와 서버는 컴퓨터간의 관계를 역할로 구분하는 개념…","fields":{"slug":"/자바의정석/18/"},"frontmatter":{"date":"January 13, 2022","title":"[자바의 정석] 16장 네트워킹 Networking","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"이번 포스팅에서는 MySQL을 사용하기위해 기본적으로 알아야할 C(create)R(read)U(update)D(delete)에 관한 문법에 대해 포스팅 해보겠다. CRUD에 들어가기 전에 MySQL에서는 CREATE를 사용하여 데이터베이스와 테이블을 만들 수 있다. CREATE DATABASE 다음 커맨드를 실행하고 정상적으로 실행이 되었을 경우 Quer…","fields":{"slug":"/DB/mysql기초문법/post/"},"frontmatter":{"date":"January 11, 2022","title":"mysql CRUD 문법","category":"DB","draft":false}}},{"node":{"excerpt":"입출력이란? I/O란 Input과 Output의 약자로 입력과 출력, 단단히 줄여서 입출력이라고 한다. 입출력은 컴퓨터 내부 또는 외부의 장치와 프로그램간의 데이터를 주고받는 것을 말한다. 이번 포스팅에서는 이러한 것들이 있다고 간단하게 익히고 필요할 때마다 찾아가는 식으로 하면 좋을 것 같다. 스트림(stream) 자바에서 입출력을 수행하려면, 두 대상…","fields":{"slug":"/자바의정석/17/"},"frontmatter":{"date":"January 10, 2022","title":"[자바의 정석] 15장 입출력 I/O","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"이번 포스팅은 JavaScript이다. JavaScript는 내용이 많기에 필요할 때마다 찾아보도록 하고, 오늘은 JavaScript의 람다식 사용법과 고차함수의 종류 대해 설명하겠다. JavaScript 공부 관련 검색 사이트 TCP School MDN W3School 화살표 함수, 람다식 화살표 함수 표현이란 전통적인 함수표현(function으로 함수…","fields":{"slug":"/FE/4_JavaScript_고차함수/post/"},"frontmatter":{"date":"January 09, 2022","title":"JavaScript, 화살표 함수와 고차함수","category":"FE","draft":false}}},{"node":{"excerpt":"이번 포스팅은 CSS이다. CSS는 태그들과 기능들이 워낙 많기 때문에 관련 태그들은 필요할 때마다 각 사이트에서 검색해보며 사용하고, 오늘은 CSS의 정의와 문법들을 사용할 때 필요한 개념들에 대해 정리해볼 것이다. CSS 공부 관련 검색 사이트 TCP School MDN W3School CSS CSS는 Cascading Style Sheet의 약자로,…","fields":{"slug":"/FE/3_CSS/post/"},"frontmatter":{"date":"January 09, 2022","title":"CSS","category":"FE","draft":false}}},{"node":{"excerpt":"HTML HTML이란 Hyper Text Markup Language의 약자로 하이퍼 텍스트 문서가 마크업 언어 형태로 만들어 진 것이다. 태그(Tag)란 마크업 언어란 태그라는 형식으로 둘러진 언어를 의미하는데, 이때 태그는 표현이나 어떤 기능의 수행을 지시하는 짧은 낱말을 의미한다. HTML 태그 사용 순위 사이트에 보면 웹페이지들에서 많이 쓰는 태그…","fields":{"slug":"/FE/2_html_tags/post/"},"frontmatter":{"date":"January 09, 2022","title":"HTML 태그 정리","category":"FE","draft":false}}},{"node":{"excerpt":"닷홈(dothome)이란 닷홈은 웹 호스팅을 해주는 사이트이다. 닷홈에서는 무료 호스팅을 3달간 지원해주기 때문에 사용하도록 한다. 호스팅이란 웹 페이지를 만들기 위해서는 일단 서버가 필요하다. 하지만 개인이 서버를 구매하며 이를 유지하는 것은 쉽지 않다. 따라서 이런 서버를 가지고 있는 기업들에게 유지하는 비용을 내고 빌려 쓰는 것을 호스팅이라고 한다.…","fields":{"slug":"/FE/1_dothome/post/"},"frontmatter":{"date":"January 09, 2022","title":"닷홈(dothome)으로 웹 호스팅 하기","category":"FE","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/11660 풀이전략 누적합 Board를 만들어야한다.  이후 구간합을 구할 수 있다.  코드 회고 누적 Board를 구하고 이제 이를 통해 답을 도출할 수 있다. 수식을 항상 잘 찾아보려고 노력해야겠다.","fields":{"slug":"/PS/DP/11660/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 11660번 JAVA : 구간 합 구하기 5","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2156 풀이전략 포도주를 3번 연속 마실 수 없으므로 그냥 단순히 먹고갈지 그냥 패스할지로 계산하면 된다. 총 6개의 포도주 잔이 있을 때 앞에 뒤에 456을 합한 것이 다른 것들을 합한 것보다 클 수 있는 경우가 있기 때문이다. 포도주의 양은 1,000이하의 음이 아닌 …","fields":{"slug":"/PS/DP/2156/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 11660번 JAVA : 포도주시식","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1106 풀이전략 총 투자하는 값을 쪼개면서 내려가면 가장 적은 투자 가능 값을 알수있다. 고객을 적어도 C명 늘리는 것이므로 C에 딱 맞출 필요 없다. 다음 점화식을 이용하여 문제를 해결하였다.  코드 회고 이 또한 마찬가지로 가장 큰 값을 생각할 때 이 큰 값은 작은 값…","fields":{"slug":"/PS/DP/1106/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 1106번 JAVA : 호텔","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1890 풀이전략 반드시 오른쪽 or 아래 쪽으로만 이동한다 2^63-1 까지 값이 커질 수 있으니 long타입으로 풀어야한다. 해당 점화식을 이용하여 문제를 해결하였다.  코드 회고 이동을 할 때 오른쪽, 아래쪽으로만 이동하는것이 문제를 해결하는데 큰 힌트였다. DP문제에…","fields":{"slug":"/PS/DP/1890/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 1890번 JAVA : 점프","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/11055 풀이전략 백준 11053 가장 긴 부분수열 문제와 거의 비슷하다. 단 여기서는 합이라는 차이가 있다. 더 짧더라도 크기가 더 클 수 있다. 코드 풀이 1 : top-down 풀이 2 : bottom-up 회고 바로 이전에 11053문제를 풀어서 11055문제는 수…","fields":{"slug":"/PS/DP/11055/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 11055번 JAVA : 가장 큰 증가 부분 수열","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/11053 풀이전략 전형적인 증가하는 부분수열 문제이다. top-down, bottom-up 두가지 방식으로 다 풀 수 있다. 코드 풀이 1 : top-down 풀이 2 : bottom-up 회고 풀이 1로 문제를 풀면서 계속 틀리는 문제가 발생했었다. 백준에도 검색해보니 …","fields":{"slug":"/PS/DP/11053/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 11053번 JAVA : 가장 긴 증가하는 부분 수열","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2407 풀이전략 순열 조합의 식을 기억해야한다.  값이 매우 커질 수 있으니 long을 사용해야한다. -> 더 커질 경우 BigInteger… 코드 회고 long으로 커버가 안되는 부분은 BigInteger라는 클래스르 사용해야 함을 알게 되었다… 근데 정말 마음에 안든다…","fields":{"slug":"/PS/DP/2407/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 2407번 JAVA : 조합","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/11727 풀이전략 새로운 블럭이 추가될 때, 이전에 있었던 사이즈로 만들 수 있는 부분을 메모이제이션을 통해 활용한다. %10007을 해주는 것을 실수하지 말아야한다. 코드 회고 처음 문제를 풀 때 맨 마지막에만 %10007 문제를 틀려버렸다. 이러한 것에 주의해야한다. …","fields":{"slug":"/PS/DP/11727/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 11727번 JAVA : 2xn 타일링 2","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/17626 풀이전략 만족하는 가장 작은 제곱수들의 합으로 답을 구하려고 했으나, 이는 틀린 방법 이였다. 만족하는 이전 제곱수들의 합을 다 구해서 그 중의 최소 개수인 것을 찾아야한다. 출처코드 : https://steady-coding.tistory.com/18 코드 회고…","fields":{"slug":"/PS/DP/17626/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 17626번 JAVA : Four Squares","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/9461 풀이전략 DP문제로 점화식을 찾아야 한다.  값이 long타입까지 나올 수 있음을 항상 생각해야한다. 코드 회고 점화식을 찾아서 쉽게 해결할 수 있었다. 단 long타입을 해주지 않아 먼저 틀렸는데, 앞으로 문제를 해결할때 이게 long이 필요한지 아닌지 항상 고려…","fields":{"slug":"/PS/DP/9461/post/"},"frontmatter":{"date":"January 08, 2022","title":"백준 9461번 JAVA : 파도반 수열","category":"PS","draft":false}}},{"node":{"excerpt":"스트림 (stream) 스트림은 데이터 소스를 추상화 하고, 데이터를 다루는데 자주 사용되는 메서드들을 정의해 놓았다. 예를 들어 list를 정렬할 때는 Collections.sort()를 써야하고 배열을 정렬할 때는 Arrays.sort()를 사용해야 하기 때문에 이런 불편함을 해결하기 위해 나타났다. 스트림의 특징 스트림은 데이터 소스를 변경하지않는다…","fields":{"slug":"/자바의정석/16/"},"frontmatter":{"date":"January 07, 2022","title":"[자바의 정석] 14-2장 스트림(Stream)","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"람다식(Lambda expression) 람다식(Lambda expression)은 JDK 1.8 부터 추가되었다. 람다식은 메서드를 하나의 ‘식(expression)‘으로 표현한 것이다. 람다식을 함수를 간략하고 명확하게 표현할 수 있다 -> 가독성에 좋다 람다식을 ‘익명 함수(anonymous function)’ 이라고도 한다 모든 메서드는 클래스에 …","fields":{"slug":"/자바의정석/15/"},"frontmatter":{"date":"January 06, 2022","title":"[자바의 정석] 14-1장 람다식","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"프로세스와 쓰레드 프로세스(process)는 실행중인 프로그램(program)이다. 프로그램을 실행하면 OS로부터 실행에 필요한 자원(메모리)을 할당받아 프로세스가 된다. 프로세스는 프로그램을 수행하는데 필요한 데이터와 메모리 등의 자원 그리고 쓰레드로 구성되어 있다. 프로세스를 작업공간(공장)이라고 하면 쓰레드는 작업을 처리하는 일꾼(worker)로 생…","fields":{"slug":"/자바의정석/14/"},"frontmatter":{"date":"January 05, 2022","title":"[자바의 정석] 13장 쓰레드 Thread","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"Generics 지네릭스는 다양한 타입의 객체들을 다루는 메서드나 컬렉션 클래스의 컴파일 시의 타입 체크(compile - time type check)를 해주는 기능이다. 객체의 타입을 컴파일 시에 체크하기 때문에 객체의 타입 안정성을 높이고 형변환의 번거로움이 줄어든다. 지네릭 클래스의 선언 위와 같은 클래스가 있을 때 이를 지네릭 클래스로 변경하면 …","fields":{"slug":"/자바의정석/13/"},"frontmatter":{"date":"January 04, 2022","title":"[자바의 정석] 12장 지네릭스, 열거형, 애너테이션","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1780 풀이전략 한번 분할 할 때마다 9부분으로 나누고 해당 부분들이 종이로 만들어 질 수 있는지 찾아야한다. 일반적인 분할정복 문제지만 분할할 부분이 9개나 되므로 실수하지 않도록 주의해야한다. 코드 회고 이전에 풀었던 색종이만들기 문제(2630)와 거의 같은 문제이다.…","fields":{"slug":"/PS/분할정복/1780/post/"},"frontmatter":{"date":"January 03, 2022","title":"백준 1780번 JAVA : 종이의 개수","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/1780 풀이전략 4부분씩 분할하여 가장 작은 부분들로 내려가고, 4부분이 합쳐질 때마다 2번쨰로 큰 숫자가 무엇인지 구해야한다. 2번째로 큰 숫자를 구할 때, 1, 2, 3, 3 처럼 제일 큰 숫자가 2개이면 3또한 2번째로 큰 숫자가 될 수 있다는 것을 유의해야한다. 코…","fields":{"slug":"/PS/분할정복/17829/post/"},"frontmatter":{"date":"January 03, 2022","title":"백준 17829번 JAVA : 222-풀링","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/4779 풀이전략 한번 분할 할 때마다 3부분으로 나누고 가운데 부분을 공백으로 바꾸어야한다. 프로그램 종료 여부는 EOF로 확인해야한다. BufferReader로 readLine을 할때 return값이 null이면 EOF이다. Scanner를 사용할 경우, Scanner.…","fields":{"slug":"/PS/분할정복/4779/post/"},"frontmatter":{"date":"January 03, 2022","title":"백준 4779번 JAVA : 칸토어 집합","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/2630 풀이전략 전형적인 분할정복 문제로 분할 한 부분마다 종이가 자를 규칙을 만족하는지 아닌지를 파악해야한다. 각 partition마다 4번 분할을 하여 만족하는지를 파악하도록 재귀함수를 이용하여 구현해야한다. 코드 회고 전형적인 분할정복 문제로 해당 풀이법을 잘 알아두…","fields":{"slug":"/PS/분할정복/2630/post/"},"frontmatter":{"date":"January 03, 2022","title":"백준 2630번 JAVA : 색종이 만들기","category":"PS","draft":false}}},{"node":{"excerpt":"문제 백준 문제 링크 : https://www.acmicpc.net/problem/11582 풀이전략 몇명이서 정렬을 진행하는지 즉 얼마나 분할하여 정렬을 해야하는지 파악하는 것이 중요하다. Arrays.sort(arr, startIdx, endIdx)로 부분 정렬이 가능하다. 코드 회고 간단하게 부분정렬을 사용하여 구현할 수 있었다.","fields":{"slug":"/PS/분할정복/11582/post/"},"frontmatter":{"date":"January 03, 2022","title":"백준 11582번 JAVA : 치킨 TOP N","category":"PS","draft":false}}},{"node":{"excerpt":"HashSet HashSet은 Set인터페이스를 구현한 컬렉션이다. Set인터페이스의 특징대로 HashSet은 중복된 요소를 저장하지 않는다. 중복된 요소 추가시 false 반환 저장순서를 유지하고 싶으면 LinkedHashSet을 사용해야한다. 다음과 같은 함수들이 있고 자세한 상황은 공식문서를 확인하자 HashSet의 요소 판별 HashSet의 add…","fields":{"slug":"/자바의정석/12/"},"frontmatter":{"date":"December 31, 2021","title":"[자바의 정석] 11장 컬렉션 프레임웍 Collections Framework - 2","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"컬렉션 프레임웍(Collections Framework) 컬렉션 프레임웍이란, ‘데이터 군을 저장하는 클래스들을 표준화한 설계’를 뜻한다. 즉 다수의 데이터를 저장하는 표준화된 프로그래밍 방식을 말한다. 컬렉션 프레임웍의 핵심 인터페이스 컬렉션 프레임웍에서는 컬렉션 데이터 그룹을 크게 3가지 타입이 존재한다고 인식하고 3개의 인터페이스를 정의하였다. 이중…","fields":{"slug":"/자바의정석/11/"},"frontmatter":{"date":"December 30, 2021","title":"[자바의 정석] 11장 컬렉션 프레임웍 Collections Framework - 1","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"Calendar와 Date Calender와 Date는 자바 탄생부터 지금까지 20년 넘게 사용되는 패키지이다. 단 최근에는 새로 추가된 java.time 패키지로 기존의 모든 단점들이 개선되어 주로 사용된다. Calendar 캘렌더는 추상클래스이기 때문에 직접 개체를 생성할 수 없고, 메서드를 통해(getInstance) 완전 구현된 클래스의 인스턴스를…","fields":{"slug":"/자바의정석/10/"},"frontmatter":{"date":"December 27, 2021","title":"[자바의 정석] 10장 날짜와 시간 & 형식화 date, time and formatting","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"java.lang 패키지 java.lang패키지에는 자바프로그래밍에서 가장 기본이 되는 클래스들을 포함하고 있다. 따라서 import문 없이도 java.lang패키지의 클래스들을 사용할 수 있다. Object클래스 Object클래스는 모든 클래스의 최고 조상이기 때문에 Object클래스의 멤버들은 모든 클래스에서 바로 사용가능하다. equals(Objec…","fields":{"slug":"/자바의정석/9/"},"frontmatter":{"date":"December 24, 2021","title":"[자바의 정석] 9장 java.lang패키지와 유용한 클래스","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"예외처리(exception handling) 컴파일 에러 : 컴파일 시에 발생하는 에러 런타임 에러 : 실행시에 발생하는 에러 논리적 에러 : 실행은 되지만, 의도와 다르게 동작하는 것 이중 런타임에러를 방지하기 위해 프로그램의 실행 중 발생할 수 있는 모든 경우의 수를 고려하여 이에 대한 대비가 필요하다 자바에서는 런타임에러에서 발생할 수 있는 프로그램…","fields":{"slug":"/자바의정석/8/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 8장 예외처리 (exception handling)","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"1. 클래스 간의 관계 1. 상속 상속이란 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것이다. 적은 양의 코드로 새로운 클래스를 작성할 수 있다. 코드를 공통으로 관리 할 수 있다. 상속받고자하는 클래스 이름을 extends 와 함께 사용하면 상속이 가능하다. 생성자와 초기화 블럭은 상속되지 않는다. 멤버만 상속된다. 자손클래스의 멤버 개수는 부…","fields":{"slug":"/자바의정석/7/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 7장 객체지향 프로그래밍 2","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"객체지향언어 기본 이론 “실제 세계는 사물(객체)로 이루어져 있으며, 발생하는 모든 사건들은 사물간의 상호작용이다.” 객체지향언어 특징 코드의 재사용성이 높다 새로운 코드를 작성할 때 기존의 코드를 이용하여 쉽게 작성할 수 있다. 코드의 관리가 용이하다 코드간의 관계를 이용해서 적은 노력으로 쉽게 코드를 변경할 수 있다. 신뢰성이 높은 프로그래밍을 가능하…","fields":{"slug":"/자바의정석/6/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 6장 객체지향 프로그래밍 1","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"배열이란? 배열은 같은 타입의 여러 변수를 하나의 묶음으로 다루는 것을 말한다. ‘new’ 에 의해서 메모리의 빈 공간에 5개의 int형 데이터를 저장할 수 있는 공간이 마련된다. 배열이름.length 생성된 배열의 길이를 반환한다. 배열은 한번 생성하면 길이를 변경할 수 없기 때문에, 이미 생성된 배열의 길이는 변하지 않는다.\n-> ‘배열이름.lengt…","fields":{"slug":"/자바의정석/5/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 5장 배열 Array","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"조건문 1. if문 자바에서 조건식의 결과는 반드시 true 또는 false이어야 한다. 즉 조건식의 결과는 반드시 boolean 이여야 한다. 2. switch 문 단 하나의 조건식으로 많은 경우의 수를 처리할 때 사용한다. switch문의 조건식 결과는 정수 또는 문자열이어야 한다. case문의 값은 정수 상수만 가능하며, 중복되지 않아야 한다. 반복…","fields":{"slug":"/자바의정석/4/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 4장 조건문, 반복문","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"연산자 연산자는 연산을 수행하는 기호를 뜻한다 operator : 연산을 수행하는 기호 (+, -, *, / ) operand : 연산자의 작업 대상 (변수, 상수, 리터럴, 수식) 연산자의 우선순위 산술 > 비교 > 논리 > 대입 순서대로 진행된다 (대입이 맨 마지막) 단항(1) > 이항(2) > 삼항(3) 순서대로 진행된다. 단항 연산자와 대입연산자를…","fields":{"slug":"/자바의정석/3/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 3장 연산자 Operator","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"변수란? 변수란 단 하나의 값을 저장할 수 있는 메모리 공간 이다. 단 하나의 값만 저장할 수 있으므로 새로운 값을 저장하면 기존의 값은 사라진다. 변수의 타입 기본형 (Primitive type) 논리 boolean - 1byte true, false\n1bit로 충분하지만 자바에서 데이터를 다루는 최소단위가 byte이기 때문에 boolean의 크기는 1…","fields":{"slug":"/자바의정석/2/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 2장 변수 variable","category":"자바의 정석","draft":false}}},{"node":{"excerpt":"자바의 특징 운영체제의 독립적 (JVM)을 통해서 가능 객체지향언어 자동 메모리관리 : 가비지 컬렉터 네트워크와 분산처리 지원 멀티쓰레드 지원 동적로딩 실행시 모든 클래스가 로딩되지 않고 필요한 시점에 클래스를 로딩하여 사용한다. JVM JVM은 Java Virtual Machine의 약자로 자바 가상머신이라고 부른다. 순서 자바 컴파일러에 의해 자바소스…","fields":{"slug":"/자바의정석/1/"},"frontmatter":{"date":"December 23, 2021","title":"[자바의 정석] 1장 자바를 시작 하기전에(JVM, GC)","category":"자바의 정석","draft":false}}}]}},"pageContext":{}}}